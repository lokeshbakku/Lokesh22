// Base class Fruit
class Fruit {
    private String name;
    private String color;

    // Constructor
    public Fruit(String name, String color) {
        this.name = name;
        this.color = color;
    }

    // Getter methods
    public String getName() {
        return name;
    }

    public String getColor() {
        return color;
    }
}

// Subclass Apple extending Fruit
class Apple extends Fruit {
    private String variety;

    // Constructor
    public Apple(String name, String color, String variety) {
        super(name, color); // Call superclass constructor
        this.variety = variety;
    }

    // Getter method for variety
    public String getVariety() {
        return variety;
    }
}

// Subclass Banana extending Fruit
class Banana extends Fruit {
    private boolean isRipe;

    // Constructor
    public Banana(String name, String color, boolean isRipe) {
        super(name, color); // Call superclass constructor
        this.isRipe = isRipe;
    }

    // Getter method for ripeness
    public boolean isRipe() {
        return isRipe;
    }
}

public class FruitHierarchy {
    public static void main(String[] args) {
        // Creating objects of Apple and Banana
        Apple apple = new Apple("Apple", "Red", "Gala");
        Banana banana = new Banana("Banana", "Yellow", true);

        // Printing details of Apple
        System.out.println("Apple:");
        System.out.println("Name: " + apple.getName());
        System.out.println("Color: " + apple.getColor());
        System.out.println("Variety: " + apple.getVariety());

        // Printing details of Banana
        System.out.println("\nBanana:");
        System.out.println("Name: " + banana.getName());
        System.out.println("Color: " + banana.getColor());
        System.out.println("Is Ripe: " + banana.isRipe());
    }
}
